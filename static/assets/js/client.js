// Generated by CoffeeScript 1.6.3
(function() {
  var deliveryApp;

  deliveryApp = angular.module('DeliveryApp', []);

  deliveryApp.directive('expander', function() {
    return {
      restrict: 'A',
      link: function(scope, element) {
        return element.bind('click', function() {
          return element.find('[expand]').toggle();
        });
      }
    };
  });

  deliveryApp.directive('expand', function() {
    return {
      restrict: 'A',
      link: function(scope, element) {
        return element.hide();
      }
    };
  });

  deliveryApp.directive('delivery', function() {
    return {
      restrict: 'A',
      templateUrl: 'delivery.html'
    };
  });

  deliveryApp.directive('extraInfo', function() {
    return {
      restrict: 'E',
      templateUrl: 'extraInfo.html'
    };
  });

  deliveryApp.controller('DeliveryTable', function($scope, $timeout) {
    var socket, updateTime;
    $scope.employeeID = 4;
    $scope.storeID = 'MyStoreID';
    $scope.dispatched = new Date().getTime();
    $scope.deliveries = {};
    $scope.getDeliveries = function() {
      var deliveries, delivery, id, _ref;
      deliveries = [];
      _ref = $scope.deliveries;
      for (id in _ref) {
        delivery = _ref[id];
        deliveries.push(delivery);
      }
      return deliveries;
    };
    $scope.noDeliveries = function() {
      return $.isEmptyObject($scope.deliveries);
    };
    $scope.getURLAddress = function(address) {
      return "http://maps.google.com/?q=" + encodeURIComponent(address);
    };
    updateTime = function() {
      $scope.currentTime = new Date().getTime();
      return $timeout(updateTime, 1000);
    };
    updateTime();
    $scope.getTime = function(timePlaced) {
      return Math.round(($scope.currentTime - timePlaced) / 60000);
    };
    $scope.getDispatched = function() {
      return $scope.getTime($scope.dispatched);
    };
    socket = io.connect('http://localhost');
    $scope.login = function() {
      $scope.deliveries = {};
      return socket.emit('login', {
        "storeID": $scope.storeID,
        "employeeID": $scope.employeeID
      });
    };
    socket.on('clientAssignDelivery', function(data) {
      $scope.deliveries[data.delivery.checkNumber] = data.delivery;
      return $scope.dispatched = data.dispatched;
    });
    socket.on('clientUnassignDelivery', function(data) {
      delete $scope.deliveries[data.delivery.checkNumber];
      return $scope.dispatched = data.dispatched;
    });
    socket.on('clientEditDelivery', function(data) {
      $scope.deliveries[data.delivery.checkNumber] = data.delivery;
      return $scope.dispatched = data.dispatched;
    });
    return $scope.login();
  });

}).call(this);
